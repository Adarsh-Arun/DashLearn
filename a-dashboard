"use client"

import { useState } from 'react'
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs"
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select"
import { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, PieChart, Pie, Cell } from 'recharts'
import { AlertTriangle, TrendingDown, Users } from 'lucide-react'

// Mock data - replace with real data in production
const overviewData = {
  totalStudents: 10000,
  atRiskStudents: 1500,
  dropoutRate: 15,
}

const dropoutReasons = [
  { name: 'Financial Constraints', value: 35 },
  { name: 'Academic Difficulties', value: 25 },
  { name: 'Family Responsibilities', value: 20 },
  { name: 'Lack of Interest', value: 15 },
  { name: 'Health Issues', value: 5 },
]

const dropoutByCategory = [
  { name: 'School A', dropoutRate: 18 },
  { name: 'School B', dropoutRate: 12 },
  { name: 'School C', dropoutRate: 15 },
  { name: 'School D', dropoutRate: 10 },
  { name: 'School E', dropoutRate: 20 },
]

const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#8884D8']

export default function Dashboard() {
  const [selectedState, setSelectedState] = useState('All India')

  return (
    <div className="container mx-auto p-4">
      <h1 className="text-3xl font-bold mb-6">EduDrop Dashboard</h1>
      <div className="mb-6">
        <Select onValueChange={setSelectedState} defaultValue={selectedState}>
          <SelectTrigger className="w-[180px]">
            <SelectValue placeholder="Select State" />
          </SelectTrigger>
          <SelectContent>
            <SelectItem value="All India">All India</SelectItem>
            <SelectItem value="Maharashtra">Maharashtra</SelectItem>
            <SelectItem value="Karnataka">Karnataka</SelectItem>
            <SelectItem value="Tamil Nadu">Tamil Nadu</SelectItem>
            {/* Add more states as needed */}
          </SelectContent>
        </Select>
      </div>
      <div className="grid grid-cols-1 md:grid-cols-3 gap-4 mb-6">
        <Card>
          <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
            <CardTitle className="text-sm font-medium">Total Students</CardTitle>
            <Users className="h-4 w-4 text-muted-foreground" />
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold">{overviewData.totalStudents.toLocaleString()}</div>
          </CardContent>
        </Card>
        <Card>
          <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
            <CardTitle className="text-sm font-medium">At-Risk Students</CardTitle>
            <AlertTriangle className="h-4 w-4 text-muted-foreground" />
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold">{overviewData.atRiskStudents.toLocaleString()}</div>
            <p className="text-xs text-muted-foreground">
              {((overviewData.atRiskStudents / overviewData.totalStudents) * 100).toFixed(1)}% of total
            </p>
          </CardContent>
        </Card>
        <Card>
          <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
            <CardTitle className="text-sm font-medium">Dropout Rate</CardTitle>
            <TrendingDown className="h-4 w-4 text-muted-foreground" />
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold">{overviewData.dropoutRate}%</div>
            <p className="text-xs text-muted-foreground">
              {overviewData.dropoutRate > 10 ? 'Above' : 'Below'} national average
            </p>
          </CardContent>
        </Card>
      </div>
      <Tabs defaultValue="insights" className="space-y-4">
        <TabsList>
          <TabsTrigger value="insights">Dropout Insights</TabsTrigger>
          <TabsTrigger value="solutions">Solution Pathways</TabsTrigger>
        </TabsList>
        <TabsContent value="insights">
          <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
            <Card>
              <CardHeader>
                <CardTitle>Top Reasons for Dropout</CardTitle>
                <CardDescription>ML-derived factors with data proof</CardDescription>
              </CardHeader>
              <CardContent className="h-[300px]">
                <ResponsiveContainer width="100%" height="100%">
                  <PieChart>
                    <Pie
                      data={dropoutReasons}
                      cx="50%"
                      cy="50%"
                      labelLine={false}
                      label={({ name, percent }) => `${name} ${(percent * 100).toFixed(0)}%`}
                      outerRadius={80}
                      fill="#8884d8"
                      dataKey="value"
                    >
                      {dropoutReasons.map((entry, index) => (
                        <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />
                      ))}
                    </Pie>
                    <Tooltip />
                  </PieChart>
                </ResponsiveContainer>
              </CardContent>
            </Card>
            <Card>
              <CardHeader>
                <CardTitle>Dropout Rate by School</CardTitle>
                <CardDescription>Segmented analysis for targeted intervention</CardDescription>
              </CardHeader>
              <CardContent className="h-[300px]">
                <ResponsiveContainer width="100%" height="100%">
                  <BarChart data={dropoutByCategory}>
                    <CartesianGrid strokeDasharray="3 3" />
                    <XAxis dataKey="name" />
                    <YAxis />
                    <Tooltip />
                    <Legend />
                    <Bar dataKey="dropoutRate" fill="#8884d8" />
                  </BarChart>
                </ResponsiveContainer>
              </CardContent>
            </Card>
          </div>
        </TabsContent>
        <TabsContent value="solutions">
          <SolutionPathways />
        </TabsContent>
      </Tabs>
    </div>
  )
}

function SolutionPathways() {
  return (
    <Card>
      <CardHeader>
        <CardTitle>Recommended Interventions</CardTitle>
        <CardDescription>Personalized solutions to reduce dropout risk</CardDescription>
      </CardHeader>
      <CardContent>
        <ul className="space-y-4">
          <li>
            <h3 className="font-medium">Government Schemes</h3>
            <p className="text-sm text-muted-foreground">Explore state and central government educational support programs</p>
          </li>
          <li>
            <h3 className="font-medium">Scholarship Opportunities</h3>
            <p className="text-sm text-muted-foreground">Find financial aid options based on academic performance and need</p>
          </li>
          <li>
            <h3 className="font-medium">Personalized Learning Paths</h3>
            <p className="text-sm text-muted-foreground">Tailored curriculum adjustments for at-risk students</p>
          </li>
          <li>
            <h3 className="font-medium">Mentorship Programs</h3>
            <p className="text-sm text-muted-foreground">Connect with mentors for academic and personal guidance</p>
          </li>
        </ul>
      </CardContent>
    </Card>
  )
}